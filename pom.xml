<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.tedBilgar.cookapp</groupId>
    <artifactId>cookapp</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <spring.version>5.1.6.RELEASE</spring.version>
        <spring.data.version>2.1.6.RELEASE</spring.data.version>
        <lombok.version>1.18.4</lombok.version>
        <hibernate.version>5.4.2.Final</hibernate.version>
        <org.mapstruct.version>1.2.0.Final</org.mapstruct.version>
        <maven-war-plugin.version>3.2.2</maven-war-plugin.version>
        <version.surefire.plugin>2.22.1</version.surefire.plugin>
        <jackson.version>2.12.6.1</jackson.version>

        <!--для сборки мавена-->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <file.encoding>UTF-8</file.encoding>
        <version.compiler.plugin>3.5.1</version.compiler.plugin>
    </properties>

    <dependencies>
        <!--javax servlet нужен лишь на этапе компиляции, в контейнере он уже есть. Для контейнера-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!--Основные зависимости для Spring Framework WEB-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
        <!--Конец Основные зависимости для Spring Framework WEB-->


        <!--Основные зависимости для Spring Security-->
          <!--  <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>5.1.5.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>5.1.5.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>5.1.5.RELEASE</version>
            </dependency>-->
        <!--Конец Основные зависимости для Spring Security-->



        <!--Основные зависимости для работы с данными и ОРМ-->

            <!--для JPA REPO, CRUD REPO-->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-jpa</artifactId>
                <version>${spring.data.version}</version>
            </dependency>
            <!--Для создания бина LocalContainerEntityManagerFactoryBean, который необходим
                для работы с EntityManager`ом-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!--необходима для сокрытия работы с низкоуровненными DataSourceUtils EntityManagerFactoryUtils
            SessionFactoryUtils PersistenceManagerFactoryUtils-->
            <!--для аннотациия @Transactional для собственно написанных квери-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-java8</artifactId>
                <version>${hibernate.version}</version><exclusions>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
            </exclusions>
            </dependency>

        <!--Конец Основные зависимости для работы с данными и ОРМ-->

        <!--Тестирование-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>1.3</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>5.2.9.Final</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <version>2.1.6.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <scope>test</scope>
                <version>1.4.194</version>
            </dependency>

            <dependency>
                <groupId>simple-jndi</groupId>
                <artifactId>simple-jndi</artifactId>
                <version>0.11.4.1</version>
                <scope>test</scope>
            </dependency>

        <!--Конец Тестирование-->


        <!--РАЗНОЕ-->

            <!--Логгеры-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.25</version>
            </dependency>

            <!--Нужен вместе с WEB-INF/glassfish-web.xml для того, чтобы glassfish не ругался на jboss logging после начальной конфигурации-->
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>3.3.0.Final</version>
            </dependency>

            <!--Чтобы не ругался после начальной конфигурации-->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!--Чтобы не ругался после начальной конфигурации
                нужен как база для парсинга HTTP запроса с закодированным фалом в теле запроса
            -->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.4</version>
            </dependency>

            <!--Lombok-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--Для создания статический метамодели для Criteria(createQuery(...))-->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>${hibernate.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--Зависимость для маппинга классов MapStruct http://mapstruct.org/-->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
                <scope>provided</scope>
            </dependency>

        <!--Конец Разное-->

    </dependencies>

    <!--Необходим для создания entityManagerFactory-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-bom</artifactId>
                <version>5.1.5.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <!--Указываем ресуры всегда
            Можно использовать как темплейт для данный путей
            -->
        <finalName>cookapp</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>

            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.TTF</include>
                    <include>**/*.png</include>
                    <include>**/*.jpg</include>
                    <include>**/*.docx</include>
                </includes>
            </resource>

        </resources>

        <plugins>
            <!--Для удобного вытягивания значений из пом файла например ${project.artifactId}
                Пример https://www.hascode.com/2013/09/filtering-source-files-using-the-templating-maven-plugin/
                Можно использовать как темплейт
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>templating-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>filter-src</id>
                        <goals>
                            <goal>filter-sources</goal>
                            <goal>filter-test-sources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--Перед сборкой проекта копируем рерурсы и проперти в target дир.
                Описание: http://java-online.ru/maven-plugins.xhtml
                Можно использовать как темплейт, если расположение ресурсов то же и target дира
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <!--Выполнение копирования ресурсов на стадии валидации означает, что
                    компилятор не успеет подставить значения параметров например в properties.
                    Необходимо убрать если нужно вставлять значения в проперти.
                -->
               <!-- <executions>
                    <execution>
                        <id>default-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/classes</outputDirectory>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                                <delimiter>#</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.xml</include>
                                        <include>**/*.properties</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>-->
            </plugin>

            <!--Плагин для компилятора
                Можно использовать как темплейт, или заменить значения версий компилятора на другие (обычно Java 8)
                Собирается вместе с ломбок, мапстракт и хипренейт (можно убирать выборочно).
                -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${file.encoding}</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-jpamodelgen</artifactId>
                            <version>${hibernate.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!--Плагин для сборки WAR
                Все веб ресурсы которы указываются -> будут в корне самого WAR
                Использовать в данном виде, если веб ресурсы находятся в данной директории
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warSourceDirectory>build</warSourceDirectory>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <includes>
                                <include>WEB-INF/**</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <!--Плагин для удаления файлов при mvn clean
                Можно использовать как темплейт для данной дир. build
            -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${basedir}/build</directory>
                            <includes>
                                <include>**</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!--Плагин для включения тестов JUNIT или TESTNG во время фазы test
                Опсание https://stackoverflow.com/questions/32942389/what-is-the-use-of-maven-surefire-plugin
            -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.surefire.plugin}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

        </plugins>
    </build>


    <!--ПРОФИЛИ-->
    <!--mvn .... .... -Pdev(prod) -->
    <profiles>
        <profile>
            <id>dev</id>
            <dependencies>

            </dependencies>
            <build>
                <plugins>

                </plugins>
            </build>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!--Данный плагин исключительно для примера-->
                    <!--<plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            &lt;!&ndash;Будут вып&ndash;&gt;
                            <execution>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>-->
                </plugins>
            </build>
        </profile>
    </profiles>


</project>